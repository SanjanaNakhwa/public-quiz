name: login
on:
  deployment:
  workflow_dispatch:
env:
  ROOT: "https://api.github.com"
  REMOTE: ${{ github.repository }}
  DEPLOYMENT: PRODUCTION-LOGIN
jobs:
  filter:
    runs-on: ubuntu-latest
    permissions:
      deployments: read
    steps:
      - name: Ensuring existing deployment
        id: deployment
        run: |
          JSON=$(curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{github.token}}" \
          $ROOT/repos/$REMOTE/deployments?environment=$START);
          OUTPUT=$(jq -r '.[0].environment' <<< $JSON);
          echo "deployment environment is $OUTPUT";
          echo "approved=$OUTPUT" >> $GITHUB_OUTPUT
          echo "wanted=$START" >> $GITHUB_OUTPUT
        env:
          START: ${{ env.DEPLOYMENT }}-START
      - id: index
        run: |
          JSON=$(curl -s $ROOT/repos/$REMOTE/releases/latest)
          URL=$(jq -r '.assets[0].browser_download_url' <<< $JSON)
          echo "index=$URL" >> $GITHUB_OUTPUT
    outputs:
      approved: ${{ steps.deployment.outputs.approved }}
      wanted: ${{ steps.deployment.outputs.wanted }}
      index: ${{ steps.index.outputs.index }}
  login:
    needs: [filter]
    if: needs.filter.outputs.approved == needs.filter.outputs.wanted
    permissions:
      contents: read
    concurrency:
      group: PRODUCTION-LOGIN
      cancel-in-progress: true
    environment:
      name: PRODUCTION-LOGIN
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${{needs.filter.outputs.approved}}
      - name: Run executable
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index $ROOT_TOKEN
        env:
          INDEX_URL: ${{ needs.filter.outputs.index }}
          ROOT_PEPPER: ${{secrets.ROOT_PEPPER}}
          ROOT_TOKEN: ${{secrets.ROOT_TOKEN}}
          SESSION: ${{secrets.SESSION}}
          SERVERS: ${{secrets.SERVERS}}
          CLIENTS: ${{secrets.CLIENTS}}
          SECRETS: ${{secrets.SECRETS}}
