name: Register after new issues
on:
  public:
  issues:
    types: [opened, reopened]
env:
  ROOT: "https://api.github.com"
  REMOTE: ${{ github.repository }}
  DEPLOYMENT: PRODUCTION-LOGIN
concurrency:
  group: PRODUCTION-LOGIN
  cancel-in-progress: true
permissions:
  issues: read
  contents: write
jobs:
  code_and_token:
    environment:
      name: PRODUCTION-LOGIN
    runs-on: ubuntu-latest
    steps:
      - name: Fetching executable
        id: index
        run: |
          JSON=$(curl -s $ROOT/repos/$REMOTE/releases/latest)
          URL=$(jq -r '.assets[0].browser_download_url' <<< $JSON)
          ID=$(jq -r '.id' <<< $JSON)
          echo "index=$URL" >> $GITHUB_OUTPUT
          echo "release=$ID" >> $GITHUB_OUTPUT
      - name: Publishing Opaque codes
        run: |
          echo "" > secret.txt
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index SETUP PUB OPAQUE
          STEP=$(head -n 1 secret.txt)
          STATE=$(tail -n 1 secret.txt)
          ./index SHARE $GITHUB_TOKEN $RELEASE "$STEP"
          echo "::add-mask::$STATE"
          echo "state=$STATE" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INDEX_URL: ${{ steps.index.outputs.index }}
          RELEASE: ${{ steps.index.outputs.release }}
      - name: Awaiting User Creating GitHub App
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index SETUP APP "${{ env.state }}"
          STEP=$(head -n 1 secret.txt)
          STATE=$(tail -n 1 secret.txt)
          ./index SHARE $GITHUB_TOKEN $RELEASE "$STEP"
          echo "::add-mask::$STATE"
          echo "state=$STATE" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INDEX_URL: ${{ steps.index.outputs.index }}
          RELEASE: ${{ steps.index.outputs.release }}
      - name: Awaiting User Installing GitHub App
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index SETUP TOKEN "${{ env.state }}"
          STEP=$(head -n 1 secret.txt)
          INST=$(tail -n 1 secret.txt)
          echo "INST length is ${#INST}"
          ./index SHARE $GITHUB_TOKEN $RELEASE "$STEP"
          echo "::add-mask::$INST"
          echo "inst=$INST" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INDEX_URL: ${{ steps.index.outputs.index }}
          RELEASE: ${{ steps.index.outputs.release }}
