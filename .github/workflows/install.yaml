name: Register after new issues 
on:
  issues:
    types: [opened, reopened]
env:
  ROOT: "https://api.github.com"
  REMOTE: ${{ github.repository }}
  DEPLOYMENT: PRODUCTION-LOGIN
concurrency:
  group: PRODUCTION-LOGIN
  cancel-in-progress: true
permissions:
  issues: read
  pages: write
  contents: write
  id-token: write
  deployments: write
jobs:
  code_and_token:
    environment: PRODUCTION-LOGIN
    runs-on: ubuntu-latest
    steps:
      - name: Configure Latest Release URL
        id: index
        run: |
          JSON=$(curl -s $ROOT/repos/$REMOTE/releases/latest)
          URL=$(jq -r '.assets[0].browser_download_url' <<< $JSON)
          ID=$(jq -r '.id' <<< $JSON)
          echo "index=$URL" >> $GITHUB_OUTPUT
          echo "release=$ID" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
        with: { fetch-depth: 1 }
      - name: Publish Opaque codes
        run: |
          echo "" > secret.txt
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index SETUP PUB OPAQUE
          STEP=$(head -n 1 secret.txt)
          STATE=$(tail -n 1 secret.txt)
          ./index SHARE $GITHUB_TOKEN $RELEASE $STEP
          echo "::add-mask::$STATE"
          echo "state=$STATE" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE: ${{ steps.index.outputs.release }}
          INDEX_URL: ${{ steps.index.outputs.index }}
      - name: Create GitHub App and share Auth
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index SETUP APP "${{ env.state }}"
          STEP=$(head -n 1 secret.txt)
          STATE=$(tail -n 1 secret.txt)
          ./index SHARE $GITHUB_TOKEN $RELEASE $STEP
          echo "::add-mask::$STATE"
          echo "state=$STATE" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE: ${{ steps.index.outputs.release }}
          INDEX_URL: ${{ steps.index.outputs.index }}
      - name: Install App and share token 
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index SETUP TOKEN "${{ env.state }}"
          STEP=$(head -n 1 secret.txt)
          ./index SHARE $GITHUB_TOKEN $RELEASE $STEP
          sleep 2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE: ${{ steps.index.outputs.release }}
          INDEX_URL: ${{ steps.index.outputs.index }}
      - name: Wait for client op
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index WAIT OP
        env:
          INSTALLATION: ${{ secrets.INSTALLATION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INDEX_URL: ${{ steps.index.outputs.index }}
      - name: Login Open
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index LOGIN OPEN ?noop $OP
          STEP=$(head -n 1 secret.txt)
          ./index SHARE $GITHUB_TOKEN $RELEASE $STEP
          sleep 2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE: ${{ steps.index.outputs.release }}
          INDEX_URL: ${{ steps.index.outputs.index }}
          INSTALLATION: ${{ secrets.INSTALLATION }}
          OP: ${{ secrets.OP }}
      - name: Wait for client op
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index WAIT OP
        env:
          INSTALLATION: ${{ secrets.INSTALLATION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INDEX_URL: ${{ steps.index.outputs.index }}
      - name: Login Close
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          echo "./index LOGIN CLOSE $TODO $OP"
          echo "STEP=$(head -n 1 secret.txt)"
          echo "./index SHARE TODO_GITHUB_TOKEN $RELEASE $STEP"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE: ${{ steps.index.outputs.release }}
          INDEX_URL: ${{ steps.index.outputs.index }}
          INSTALLATION: ${{ secrets.INSTALLATION }}
          OP: ${{ secrets.OP }}
