name: Register Installation
on:
  release:
    types:
      - published 
env:
  ROOT: "https://api.github.com"
  REMOTE: ${{ github.repository }}
  DEPLOYMENT: PRODUCTION-LOGIN
concurrency:
  group: PRODUCTION-LOGIN
  cancel-in-progress: true
permissions:
  issues: read
  contents: write
jobs:
  setup:
    environment:
      name: PRODUCTION-LOGIN
    runs-on: ubuntu-latest
    outputs:
      pre: ${{ steps.index.outputs.pre }}
      index: ${{ steps.index.outputs.tag }}
      link: ${{ steps.index.outputs.link }}
      index: ${{ steps.index.outputs.index }}
      release: ${{ steps.index.outputs.release }}
    steps:
      - name: Fetching executable
        id: index
        run: |
          JSON=$(curl -s $ROOT/repos/$REMOTE/releases/latest)
          URL=$(jq -r '.assets[0].browser_download_url' <<< $JSON)
          ID=$(jq -r '.id' <<< $JSON)
          BODY=$(jq -r '.body' <<< $JSON)
          PRE=$(jq -r '.prerelease' <<< $JSON)
          LINK=$(echo "$BODY" | tail -n1)
          echo "pre=$PRE" >> $GITHUB_OUTPUT
          echo "link=$LINK" >> $GITHUB_OUTPUT
          echo "index=$URL" >> $GITHUB_OUTPUT
          echo "release=$ID" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
  code_and_token:
    if: setup.output.pre == 'false'
    needs: 
      - setup
    environment:
      name: PRODUCTION-LOGIN
    runs-on: ubuntu-latest
    steps:
      - name: Publishing Opaque codes
        run: |
          echo "" > secret.txt
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index SETUP PUB OPAQUE
          STEP=$(head -n 1 secret.txt)
          STATE=$(tail -n 1 secret.txt)
          ./index SHARE $GITHUB_TOKEN $RELEASE $STEP $LINK
          echo "::add-mask::$STATE"
          echo "state=$STATE" >> $GITHUB_ENV
        env:
          TAG: ${{ jobs.setup.outputs.tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INDEX_URL: ${{ jobs.setup.outputs.index }}
          RELEASE: ${{ jobs.setup.outputs.release }}
          LINK: ${{ jobs.setup.outputs.link }}
      - name: Awaiting User Creating GitHub App
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index SETUP APP "${{ env.state }}"
          STEP=$(head -n 1 secret.txt)
          STATE=$(tail -n 1 secret.txt)
          ./index SHARE $GITHUB_TOKEN $RELEASE $STEP $LINK
          echo "::add-mask::$STATE"
          echo "state=$STATE" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INDEX_URL: ${{ jobs.setup.outputs.index }}
          RELEASE: ${{ jobs.setup.outputs.release }}
          LINK: ${{ jobs.setup.outputs.link }}
      - name: Awaiting User Installing GitHub App
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index SETUP TOKEN "${{ env.state }}"
          STEP=$(head -n 1 secret.txt)
          INST=$(tail -n 1 secret.txt)
          echo "INST length is ${#INST}"
          ./index SHARE $GITHUB_TOKEN $RELEASE $STEP $LINK
          echo "::add-mask::$INST"
          echo "inst=$INST" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INDEX_URL: ${{ jobs.setup.outputs.index }}
          RELEASE: ${{ jobs.setup.outputs.release }}
          LINK: ${{ jobs.setup.outputs.link }}
