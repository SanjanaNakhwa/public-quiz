name: Register after Wiki
on:
  gollum:
env:
  ROOT: "https://api.github.com"
  REMOTE: ${{ github.repository }}
  DEPLOYMENT: PRODUCTION-LOGIN
concurrency:
  group: PRODUCTION-LOGIN
  cancel-in-progress: true
permissions:
  pages: write
  contents: read
  id-token: write
  deployments: write
jobs:
  code_and_token:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.pages.outputs.pages }}
    env:
      CSV: "environment.csv"
    steps:
      - name: Configure Pages Url
        id: pages
        run: |
          JSON=$(curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{github.token}}" \
          $ROOT/repos/$REMOTE/pages);
          PAGES_URL=$(jq -r '.html_url' <<< $JSON);
          echo "pages=$PAGES_URL" >> $GITHUB_OUTPUT
      - name: Configure OAuth App Client ID
        id: client
        run: |
          JSON=$(curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{github.token}}" \
          $ROOT/repos/$REMOTE);
          CLIENT=$(jq -r '.description' <<< $JSON);
          echo "client=$CLIENT" >> $GITHUB_OUTPUT
      - name: Configure Latest Release URL
        id: index
        run: |
          JSON=$(curl -s $ROOT/repos/$REMOTE/releases/latest)
          URL=$(jq -r '.assets[0].browser_download_url' <<< $JSON)
          echo "index=$URL" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
        with: { fetch-depth: 1 }
      - uses: actions/configure-pages@v2
      - name: To GitHub Device Code
        run: |
          echo "" > secret.txt
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index ${{ github.token }} $CLIENT_ID
          echo $(head -n 1 secret.txt) > docs/pub.txt
          curl -o "docs/$CSV" "$PAGES/$CSV"
          STATE=$(tail -n 1 secret.txt)
          echo "::add-mask::$STATE"
          echo "state=$STATE" >> $GITHUB_ENV
        env:
          INDEX_URL: ${{ steps.index.outputs.index }}
          CLIENT_ID: ${{ steps.client.outputs.client }}
          PAGES: ${{ steps.pages.outputs.pages }}
      - uses: actions/upload-pages-artifact@v1
        with: { path : 'docs' }
      - uses: actions/deploy-pages@v1
      - name: To GitHub OAuth Token
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index ${{ github.token }} $CLIENT_ID "${{ env.state }}"
          echo $(head -n 1 secret.txt) > docs/pub.txt
          curl -o "docs/$CSV" "$PAGES/$CSV"
          STATE=$(tail -n 1 secret.txt)
          echo "::add-mask::$STATE"
          echo "state=$STATE" >> $GITHUB_ENV
        env:
          INDEX_URL: ${{ steps.index.outputs.index }}
          CLIENT_ID: ${{ steps.client.outputs.client }}
          PAGES: ${{ steps.pages.outputs.pages }}
      - uses: actions/upload-pages-artifact@v1
        with: { path : 'docs' }
      - uses: actions/deploy-pages@v1
      - name: New Root User Registration
        run: |
          curl -L -o index $INDEX_URL
          chmod +x index
          ./index ${{ github.token }} $CLIENT_ID "${{ env.state }}"
          curl -o "docs/$CSV" "$PAGES/$CSV"
          echo "" > docs/pub.txt
        env:
          INDEX_URL: ${{ steps.index.outputs.index }}
          CLIENT_ID: ${{ steps.client.outputs.client }}
          PAGES: ${{ steps.pages.outputs.pages }}
      - uses: actions/upload-pages-artifact@v1
        with: { path : 'docs' }
      - uses: actions/deploy-pages@v1
