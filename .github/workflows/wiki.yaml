name: wiki
on:
  gollum:
permissions:
  pages: write
  contents: read
  id-token: write
  deployments: write
concurrency:
  group: secret-tv-access
  cancel-in-progress: true
env:
  ROOT: "https://api.github.com"
  REPO: ${{ github.repository }}
  STAGE: "secret-tv-access"
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - run: |
          curl \
          -X PUT \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{github.token}}" \
          $ROOT/repos/$REPO/environments/$STAGE
      - id: pages
        run: |
          JSON=$(curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{github.token}}" \
          $ROOT/repos/$REPO/pages);
          PAGES_URL=$(jq -r '.html_url' <<< $JSON);
          echo "pages=$PAGES_URL" >> $GITHUB_OUTPUT
      - id: client
        run: |
          JSON=$(curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{github.token}}" \
          $ROOT/repos/$REPO);
          CLIENT=$(jq -r '.description' <<< $JSON);
          echo "client=$CLIENT" >> $GITHUB_OUTPUT
    outputs:
      pages: ${{ steps.pages.outputs.pages }}
      client: ${{ steps.client.outputs.client }}
  code_and_token:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ needs.setup.outputs.pages }}
    env:
      CLIENT_ID: ${{ needs.setup.outputs.client }}
    needs: [setup]
    steps:
      - uses: actions/checkout@v3
        with: { fetch-depth: 1 }
      - uses: actions/configure-pages@v2
      - run: |
          ./action/index ${{ github.token }} $CLIENT_ID
          echo $(head -n 1 secret.txt) > docs/Home.md
          STATE=$(tail -n 1 secret.txt)
          echo "::add-mask::$STATE"
          echo "state=$STATE" >> $GITHUB_ENV
      - uses: actions/upload-pages-artifact@v1
        with: { path : 'docs' }
      - uses: actions/deploy-pages@v1
      - run: |
          ./action/index ${{ github.token }} $CLIENT_ID ${{ env.state }}
          echo $(head -n 1 secret.txt) > docs/Home.md
          STATE=$(tail -n 1 secret.txt)
          echo "::add-mask::$STATE"
          echo "state=$STATE" >> $GITHUB_ENV
      - uses: actions/upload-pages-artifact@v1
        with: { path : 'docs' }
      - uses: actions/deploy-pages@v1
      - run: |
          ./action/index ${{ github.token }} $CLIENT_ID ${{ env.state }}
          echo "" > docs/Home.md
      - uses: actions/upload-pages-artifact@v1
        with: { path : 'docs' }
      - uses: actions/deploy-pages@v1
