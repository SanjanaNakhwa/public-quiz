name: wiki 
on:
  gollum:
permissions:
  pages: write
  contents: read
  id-token: write
  deployments: write
concurrency:
  group: secret-tv-access
  cancel-in-progress: true
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Create Environment
        run: |
          curl \
          -X PUT \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{github.token}}" \
          $ROOT/repos/$REPO/environments/$STAGE
        env:
          ROOT: "https://api.github.com"
          REPO: ${{ github.repository }}
          STAGE: "secret-tv-access"
      - id: client
        name: Read client ID
        run: |
          JSON=$(curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{github.token}}" \
          $ROOT/repos/$REPO);
          CLIENT=$(jq -r '.description' <<< $JSON);
          echo "Using OAuth App $CLIENT";
          echo "client=$CLIENT" >> $GITHUB_OUTPUT
        env:
          ROOT: "https://api.github.com"
          REPO: ${{ github.repository }}
    outputs:
      client: ${{ steps.client.outputs.client }}
  get-code:
    needs: [setup]
    steps:
      - uses: actions/checkout@v3
      - id: step
        run: |
          ./action/index $TOKEN $CLIENT_ID
          TEXT=$(head -n 1 secret.txt) 
          NEXT=$(tail -n 1 secret.txt) 
          echo "text=$TEXT" >> $GITHUB_OUTPUT
          echo "next=$NEXT" >> $GITHUB_OUTPUT
        env:
          CLIENT_ID: ${{ needs.setup.outputs.client }}
          TOKEN: ${{ github.token }}
    outputs:
      next: ${{ steps.step.outputs.next }}
      text: ${{ steps.step.outputs.text }}
    environment:
      name: secret-tv-access
    runs-on: ubuntu-latest
  push-code:
    needs: [get-code]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/configure-pages@v2
      - run: echo $TEXT > docs/Home.md
        env:
          TEXT: ${{ needs.get-code.outputs.text }}
      - uses: actions/upload-pages-artifact@v1
        with: { path : 'docs' }
      - id: deployment
        uses: actions/deploy-pages@v1
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
  get-token:
    needs: [setup, get-code, push-code]
    steps:
      - uses: actions/checkout@v3
      - id: step
        run: |
          ./action/index $TOKEN $CLIENT_ID $ENCRYPTED
          TEXT=$(head -n 1 secret.txt) 
          NEXT=$(tail -n 1 secret.txt) 
          echo "text=$TEXT" >> $GITHUB_OUTPUT
          echo "next=$NEXT" >> $GITHUB_OUTPUT
        env:
          ENCRYPTED: ${{ needs.get-code.outputs.next }} 
          CLIENT_ID: ${{ needs.setup.outputs.client }}
          TOKEN: ${{ github.token }}
    outputs:
      next: ${{ steps.step.outputs.next }}
      text: ${{ steps.step.outputs.text }}
    environment:
      name: secret-tv-access
    runs-on: ubuntu-latest
  push-token:
    needs: [get-token]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/configure-pages@v2
      - run: echo $TEXT > docs/Home.md
        env:
          TEXT: ${{ needs.get-token.outputs.text }}
      - uses: actions/upload-pages-artifact@v1
        with: { path : 'docs' }
      - id: deployment
        uses: actions/deploy-pages@v1
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
  register:
    needs: [setup, get-token, push-token]
    steps:
      - uses: actions/checkout@v3
      - id: step
        run: |
          ./action/index $TOKEN $CLIENT_ID $ENCRYPTED
        env:
          ENCRYPTED: ${{ needs.get-token.outputs.next }} 
          CLIENT_ID: ${{ needs.setup.outputs.client }}
          TOKEN: ${{ github.token }}
    environment:
      name: secret-tv-access
    runs-on: ubuntu-latest
  cleanup:
    needs: [register]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/configure-pages@v2
      - run: echo "" > docs/Home.md
      - uses: actions/upload-pages-artifact@v1
        with: { path : 'docs' }
      - id: deployment
        uses: actions/deploy-pages@v1
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
