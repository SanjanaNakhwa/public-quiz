name: deploy pages and wiki 
permissions:
  pages: write
  id-token: write
on:
  gollum:
  push:
    tags:
      - '*'
jobs:
  copy:
    concurrency: 
      group: pages-and-wiki
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Copy Wiki Home
        run: |
          git clone $ROOT/$REPO.wiki.git
          cp ${REPO#*/}.wiki/$FILE docs
        env:
          FILE: "Home.md"
          ROOT: "https://github.com"
          REPO: ${{ github.repository }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
  filter:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure user has starred repository
        id: star
        run: |
          STATUS=`curl -Is \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{secrets.MY_TOKEN}}" \
          $ROOT/user/starred/$REPO | grep HTTP | cut -d ' ' -f2`;
          echo "Authenticated user star status is $STATUS";
          echo "::set-output name=approved::$STATUS";
        env:
          ROOT: "https://api.github.com"
          REPO: ${{ github.repository }}
      - name: Unstar repository
        run: |
          curl -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{secrets.MY_TOKEN}}" \
          $ROOT/user/starred/$REPO;
        env:
          ROOT: "https://api.github.com"
          REPO: ${{ github.repository }}
    outputs:
      approved: ${{ steps.star.outputs.approved }}
    environment:
        name: secret-tv-access
  activate:
    needs: [filter]
    if: needs.filter.outputs.approved == '204'
    concurrency:
      group: secret-tv-access
      cancel-in-progress: true
    environment:
        name: secret-tv-access
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${{needs.filter.outputs.approved}}
      - uses: actions/checkout@v3
      - name: Run executable
        run: |
          ./action/index ${{secrets.MY_TOKEN}} ${{secrets.CLIENT_ID}}
